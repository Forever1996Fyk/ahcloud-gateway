@startuml
skinparam handwritten true
skinparam backgroundColor #EEEBDC
skinparam actorStyle hollow

actor 业务用户 as user
entity 浏览器app小程序 as client
entity 用户认证服务 as user_auth
database 数据库 as db
database 缓存 as cache

==用户登录==
user -> client : 输入账号密码登录
client -> user_auth
user_auth -> db : 根据账号获取当前用户信息
db -> user_auth: 返回用户携带密码信息
user_auth -> user_auth: 用户传入密码和数据库密码对比
user_auth -> user_auth: 密码比对成功, 生成access_token和refresh_token
user_auth -> cache: 将token与用户信息的关联关系存入缓存
user_auth -> client: 返回access_token, refresh_token
note right
    access_token过期时间较短, 默认为10分钟,
    refresh_token过期时间较长, 默认为15天
end note
client -> client : 将获取的access_token, refresh_token存入本地缓存

==用户携带access_token请求==
user -> client: 用户登录后操作页面
client -> user_auth: 客户端从本地缓存获取access_token, 放入请求头中带入请求
user_auth -> cache: 根据token从redis中获取用户信息
cache -> user_auth: 返回用户信息
user_auth -> client : 返回结果
client -> client: 判断当前返回码是否是404, 如果是404, 则表示token错误或已过期, 则调用刷新token接口

==客户端调用刷新token接口==
client -> user_auth : 客户端从本地缓存获取refresh_token, 放入请求头中调用refreshToken接口
user_auth -> cache : 根据refresh_token从缓存中获取用户认证信息
cache -> user_auth: 返回用户认证信息
user_auth -> user_auth: 重新生成access_token, refresh_token
user_auth -> cache: 删除原有的refresh_token
user_auth -> client : 返回最新的access_token, refresh_token
client -> client : 将获取的access_token, refresh_token存入本地缓存

@enduml