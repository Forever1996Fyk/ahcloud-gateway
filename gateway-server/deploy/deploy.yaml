apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: gateway-server-$ENV
  name: gateway-server-$ENV
  namespace: ahcloud   #一定要写名称空间
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  selector:
    matchLabels:
      app: gateway-server-$ENV
  strategy:
    rollingUpdate:
      maxSurge: 50%
      maxUnavailable: 50%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: gateway-server-$ENV
    spec:
      imagePullSecrets:
        - name: aliyun-docker-hub  #提前在项目下配置访问阿里云的账号密码
      initContainers:
        - image: $REGISTRY/$DOCKERHUB_NAMESPACE/skywalking-agent-sidecar:8.7.0
          name: sw-agent-sidecar
          imagePullPolicy: IfNotPresent
          command:
            - sh
          args:
            - '-c'
            - >-
              mkdir -p /skywalking/agent && cp -r /usr/skywalking/agent/*
              /skywalking/agent
          volumeMounts:
            - name: sw-agent
              mountPath: /skywalking/agent
      containers:
        - image: $REGISTRY/$DOCKERHUB_NAMESPACE/gateway-server-$ENV:SNAPSHOT-$BUILD_NUMBER
          readinessProbe: # k8s就绪探针 配合springboot-actuator
            httpGet:
              scheme: HTTP
              path: /actuator/health/readiness
              port: 8080
            timeoutSeconds: 10
            failureThreshold: 30
            periodSeconds: 5
          livenessProbe: # k8s存活探针 配合springboot-actuator
            httpGet:
              scheme: HTTP
              path: /actuator/health/liveness
              port: 8080
            timeoutSeconds: 10
            failureThreshold: 30
            periodSeconds: 5
          volumeMounts: # 与skywalking共享volume空间
            - name: sw-agent
              mountPath: /usr/skywalking/agent
          imagePullPolicy: Always
          env: #环境变量 docker
            - name: CE
              value: $ENV
            - name: JAVA_OPTS
              value: $JAVA_OPTS
          name: app
          ports:
            - containerPort: 8080
              protocol: TCP
          resources:
            limits:
              cpu: 300m
              memory: 600Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
      volumes:
        - name: sw-agent
          emptyDir: {}
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: gateway-server-$ENV
  name: gateway-server-$ENV
  namespace: ahcloud
spec:
  ports:
    - name: http
      port: 8080
      protocol: TCP
      targetPort: 8080
  selector:
    app: gateway-server-$ENV
  sessionAffinity: None
  type: ClusterIP

---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: ingress-gateway
  namespace: ahcloud
  annotations:
    kubernetes.io/ingress.class: "nginx"
    # 指定我们的 rules 的 path 可以使用正则表达式
    nginx.ingress.kubernetes.io/use-regex: "true"
    # 连接超时时间，默认为 5s
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "600"
    # 后端服务器回转数据超时时间，默认为 60s
    nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
    # 后端服务器响应超时时间，默认为 60s
    nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
    # 客户端上传文件，最大大小，默认为 20m
    nginx.ingress.kubernetes.io/proxy-body-size: "20m"
    # URL 重写
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
  - host: apigw.ahcloud.com
    http:
      paths:
      - path:
        backend:
          # 后台部署的 Service Name，与上面部署的  containers-name 对应
          serviceName: app
          # 后台部署的 Service Port，与上面部署的 Tomcat 对应
          servicePort: 8080
